version: '3.8'

services:

#------------------------------------

  postgres:
    image: postgres
    container_name: my-postgres-2025
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwer4617
    ports:
      - 4032:5432
    volumes:
      - ./backend/app/config/init.sql:/docker-entrypoint-initdb.d/init.sql
      - my-pg-volume:/var/lib/postgresql/data
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

#------------------------------------

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-2025
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_SERVER_JSON_FILE: /var/lib/pgadmin/servers.json
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 4080:80
    volumes:
      - ./backend/scripts/pg-admin-scripts/servers.json:/var/lib/pgadmin/servers.json
      - my-pg-admin:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

#------------------------------------

  backend:
    build: ./backend/lyalya
    container_name: backend-deploy 
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

#------------------------------------

  frontend:
    build: ./frontend
    container_name: frontend-deploy 
    ports:
      - 4488:4488
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

#------------------------------------

  grafana:
    image: grafana/grafana-oss
    container_name: grafana-2025
    environment:
      GF_PATHS_PROVISIONING: '/etc/grafana/provisioning/'
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/dashboards/:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources/:/etc/grafana/provisioning/datasources
      - grafana-storage:/var/lib/grafana
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

#------------------------------------

  prometheus:
    image: prom/prometheus
    container_name: prometheus-2025
    # ports: # Открыть/закрыть для внешнего доступа
    #   - "9090:9090"
    volumes:
      - ./backend/scripts/prometheus-scripts/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

#------------------------------------
  node-exporter:
    image: prom/node-exporter
    container_name: exporter-2025
    # ports: # Открыть/закрыть для внешнего доступа
    #   - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

#------------------------------------ 

volumes:
  my-pg-volume: {}
  my-pg-admin: {}
  backend-deploy:
  frontend-deploy:
  prometheus-data: {}
  grafana-storage: {}